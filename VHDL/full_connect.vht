LIBRARY ieee;                                               
USE ieee.std_logic_1164.all;                                
USE work.parameters.all;

ENTITY full_connect_vhd_tst IS
END full_connect_vhd_tst;
ARCHITECTURE full_connect_arch OF full_connect_vhd_tst IS
-- constants                                                 
-- signals                                                   
SIGNAL clock : STD_LOGIC;
SIGNAL input : array_neuron;
SIGNAL output : array_softmax;
SIGNAL reset : STD_LOGIC;
SIGNAL weight : array_weight;
COMPONENT full_connect
	PORT (
	clock : IN STD_LOGIC;
	input : IN array_neuron;
	output : OUT array_softmax;
	reset : IN STD_LOGIC;
	weight: IN array_weight
	);
END COMPONENT;
BEGIN
	i1 : full_connect
	PORT MAP (
-- list connections between master ports and signals
	clock => clock,
	input => input,
	output => output,
	reset => reset,
	weight => weight
	);

PROCESS
BEGIN
	clock <= '1', '0' AFTER 5ns;
	WAIT FOR 10ns;
END PROCESS;

reset <= '1', '0' AFTER 10ns;
--Inputs
input(0) <= "00101010001111010111011001100110011";
input(1) <= "00000011110101110110011001100110011";
input(2) <= "11010001001100110011001100110011010";
input(3) <= "00001010001111010111011001100110011";
input(4) <= "00000100110011001100110011001100110";
input(5) <= "00010011101100110011001100110011001";
input(6) <= "00011011110101110110011001100110011";
input(7) <= "00100011011111001110110110011110110";
input(8) <= "00000110011011101001011110001101010";
--input(9) <= "01111010100000000";
--input(10) <= "00110001000000000";
--input(11) <= "00001011100000000";
--input(12) <= "00000010000000000";
--input(13) <= "00011100000000000";
--input(14) <= "11111111100000000";
--input(15) <= "00001011100000000";

--Weights
weight(0)(0) <= "00100111011001101100111101010011011";
weight(0)(1) <= "00010100111011110011010011010110101";
weight(0)(2) <= "00100111011010111101011101100110011";
weight(0)(3) <= "11100010110000000110001001001100010";
weight(0)(4) <= "00001010101001001010111110001101010";
weight(0)(5) <= "00000110001111010111011001100110011";
weight(0)(6) <= "00100111011001111011001100110011001";
weight(0)(7) <= "11110011001100110011001100110011010";
weight(0)(8) <= "11110001100011011011001000101101001";

weight(1)(0) <= "11100000000000000000000000000000000";
weight(1)(1) <= "00000111011001111011001100110011001";
weight(1)(2) <= "00010011001100110011001100110011001";
weight(1)(3) <= "11001011100001010001001100110011010";
weight(1)(4) <= "00111011011101100011110101110110011";
weight(1)(5) <= "11010001100010010011000010011001101";
weight(1)(6) <= "00100011111011111001110110110011110";
weight(1)(7) <= "11110110101110000101000100110011010";
weight(1)(8) <= "00010010110011110101001101110100101";

weight(2)(0) <= "00101000111101011101100110011001100";
weight(2)(1) <= "00110010100011110101110110011001100";
weight(2)(2) <= "11100011010000111001010110000001001";
weight(2)(3) <= "00001011001100110011001100110011001";
weight(2)(4) <= "11101101010000101100000011100001011";
weight(2)(5) <= "11110001011100001010001001100110100";
weight(2)(6) <= "00010101111010111011001100110011001";
weight(2)(7) <= "00010010110010111111101111011001111";
weight(2)(8) <= "00001011101111100111011011001111011";

--weight(2)(11) <= "00000000010011001";
--weight(1)(12) <= "11111111001011101";
--weight(1)(13) <= "00000000111011011";
--weight(1)(14) <= "11111111010001101";
--weight(1)(15) <= "00000000100011111";

END full_connect_arch;
